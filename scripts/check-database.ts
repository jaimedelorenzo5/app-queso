import { supabase } from '../src/lib/supabase';

async function checkDatabase() {
  console.log('üîç Verificando base de datos de quesos...\n');

  try {
    // 1. Verificar conexi√≥n
    console.log('1Ô∏è‚É£ Probando conexi√≥n a Supabase...');
    const { data: { user }, error: authError } = await supabase.auth.getUser();
    
    if (authError) {
      console.log('‚ùå Error de autenticaci√≥n:', authError.message);
    } else {
      console.log('‚úÖ Conexi√≥n exitosa a Supabase');
      console.log('üë§ Usuario actual:', user ? user.email : 'No autenticado');
    }

    // 2. Verificar tabla de quesos
    console.log('\n2Ô∏è‚É£ Verificando tabla de quesos...');
    const { data: cheeses, error: cheesesError, count } = await supabase
      .from('cheeses')
      .select('*', { count: 'exact', head: true });

    if (cheesesError) {
      console.log('‚ùå Error accediendo a la tabla cheeses:', cheesesError.message);
      return;
    }

    console.log(`‚úÖ Tabla cheeses accesible`);
    console.log(`üìä Total de quesos en la base de datos: ${count || 0}`);

    if (count && count > 0) {
      // 3. Mostrar algunos quesos de ejemplo
      console.log('\n3Ô∏è‚É£ Mostrando algunos quesos de ejemplo...');
      const { data: sampleCheeses, error: sampleError } = await supabase
        .from('cheeses')
        .select('id, name, country, milk_type')
        .limit(5);

      if (sampleError) {
        console.log('‚ùå Error obteniendo muestra:', sampleError.message);
      } else if (sampleCheeses) {
        sampleCheeses.forEach((cheese, index) => {
          console.log(`   ${index + 1}. ${cheese.name} (${cheese.country}, ${cheese.milk_type}) - ID: ${cheese.id}`);
        });
      }
    }

    // 4. Verificar estructura de la tabla
    console.log('\n4Ô∏è‚É£ Verificando estructura de la tabla...');
    const { data: structure, error: structureError } = await supabase
      .from('cheeses')
      .select('*')
      .limit(1);

    if (structureError) {
      console.log('‚ùå Error verificando estructura:', structureError.message);
    } else if (structure && structure.length > 0) {
      const cheese = structure[0];
      console.log('‚úÖ Estructura de la tabla verificada');
      console.log('üìã Campos disponibles:', Object.keys(cheese).join(', '));
      
      // Verificar campos cr√≠ticos
      const requiredFields = ['id', 'name', 'country', 'milk_type', 'maturation'];
      const missingFields = requiredFields.filter(field => !(field in cheese));
      
      if (missingFields.length > 0) {
        console.log('‚ö†Ô∏è  Campos faltantes:', missingFields.join(', '));
      } else {
        console.log('‚úÖ Todos los campos requeridos est√°n presentes');
      }
    }

  } catch (error) {
    console.error('‚ùå Error general:', error);
  }
}

// Ejecutar la verificaci√≥n
checkDatabase()
  .then(() => {
    console.log('\n‚úÖ Verificaci√≥n completada');
    process.exit(0);
  })
  .catch((error) => {
    console.error('\n‚ùå Error en la verificaci√≥n:', error);
    process.exit(1);
  });
